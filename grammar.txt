Sorry if you don't like my symbols (using some regex stuff because I am lazy).
All whitespace is ignored, meaning that any spaces in the grammar may also be
replaced by any number (including zero) of spaces.

<S>::=(<statement>|<expression>|<control>)*
<statement>::=<name> ' = ' <expression> ' ; '
<names>::=(<letter>|'_'|'-') (<letter>|<digit>|'_'|'-')*
<letter>::=[a-z][A-Z]
<digit>::=[0-9]
<expression>::=(<object>|<addition>|<subtraction>)' ; '
<object>::=<integer>|<float>|<bool>|<string>|<template>|<reference>
<integer>::=<digit>+
<float>::=<digit>+ '.' <digit>+
<bool>::='true'|'false'
<string>::="'"<character>*"'"
<template>::='template { ' <statement>* ' } '
<reference>::=<name>('.'name)*
<addition>::=<term> ' + ' <term>
<term>::=( '(' <expression> ')' )|<multiplication>|<division>
<multiplication>::=<term> ' * ' <term>
<division>::=<term> ' / ' <term>
<subtraction>::=<term> ' / ' <term>
<control>::=<if>|<while>
<if>::='if (' <expression> ') {' <S> '}'
<while>::='while (' <expression> ') {' <S> '}'
