instance = template() {
    # In some of the methods, an underscore is used as the name of the         #
    # is_second_item flag, this is to make the function declaration shorter,   #
    # and indication what the value will not be accessed.                      #

    __addition = function(other_item, _) {return (other_item * 5);};

    __subtraction = function(other_item, _) {
        return (string(other_item + 1));
    };

    __multiplication = function(other_item, is_second_item) {
        if (is_second_item) {
            return (other_item + 1);
        };
        return (other_item - 1);
    };

    __division = function(other_item, _) {};

    __power = function(other_item, _) {
        return (false);
    };
}();

addition_result = 1 + instance;
subtraction_result = instance - 0.2;
reversed_subtraction_result = 0.2 - instance;
multiplication_result = instance * 0;
reversed_multiplication_result = 0 * instance;
double_instance_multiplication_result = instance * instance;
division_result = 2 / instance;
power_result = 0 ^ instance;
